#!/usr/bin/env bash

###################################
############ FZF Magic ############
###################################

#fh - repeat history
export FZF_DEFAULT_OPTS='--layout=reverse'

# helpers
alias glGraph='git log --graph --color=always --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@"'
alias glNoGraph='git log --color=always --format="%C(auto)%h%d %s %C(black)%C(bold)%cr% C(auto)%an" "$@"'
_gitLogLineToHash="echo {} | grep -o '[a-f0-9]\{7\}' | head -1"
_viewGitLogLine="$_gitLogLineToHash | xargs -I % sh -c 'git show --color=always % | diff-so-fancy'"

# fh - Replacement for CTRL-R
fh() {
  print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf | sed 's/ *[0-9]* *//')
}

# fuzzy matching for lug commands
lu() {
  if [[ -n "$@" ]]; then lug "$@"; return; fi

  local commands command
  commands=$(lug list -n 2>&1 | awk '{print $1}')
  command=$(echo "$commands" | fzf --ansi \
    --preview="lug {} --help" \
    --header "enter to select") &&

  print -z "lug $command"
}

# fuzzy matching for platformer commands
li() {
  if [[ -n "$@" ]]; then platformer "$@"; return; fi

  local commands command
  commands=$(platformer list -n 2>&1 | awk '{print $1}')
  command=$(echo "$commands" | fzf --ansi \
    --preview="platformer {} --help" \
    --header "enter to select") &&

  print -z "platformer $command"
}

# gco - checkout git branch (including remote branches), sorted by most recent commit, limit 50 last branches
unalias gco 2> /dev/null
gco() {
  if [[ ! -z $@ ]]; then git checkout "$@"; return; fi

  local branches branch
  branches=$(git for-each-ref --count=50 --sort=-committerdate --format="%(refname:short)") &&
  branch=$(echo "$branches" |
           fzf-tmux -d $(( 2 + $(wc -l <<< "$branches") )) +m) &&
  git checkout $(echo "$branch" | sed "s/.* //" | sed "s#remotes/[^/]*/##" | sed "s/.*\///")
}

# glo - Replacement for git log, shows previews, allows selecting commits to view further
unalias glo 2> /dev/null
glo() {
    glGraph |
        fzf --no-sort --reverse --tiebreak=index --no-multi \
            --ansi --preview="$_viewGitLogLine" \
                --header "enter to view, alt-y to copy hash" \
                --bind "enter:execute:$_viewGitLogLine   | less -R" \
                --bind "alt-y:execute:$_gitLogLineToHash | xclip"
}

# env - Replacment for env
alias env="/usr/bin/env | fzf"

# c - (experimental) fuzzy search on Chrome browsing history
c() {
  local cols sep google_history open
  cols=$(( COLUMNS / 3 ))
  sep='{::}'

  if [ "$(uname)" = "Darwin" ]; then
    google_history="$HOME/Library/Application Support/Google/Chrome/Default/History"
    open=open
  else
    google_history="$HOME/.config/google-chrome/Default/History"
    open=xdg-open
  fi
  cp -f "$google_history" /tmp/h
  sqlite3 -separator $sep /tmp/h \
    "select substr(title, 1, $cols), url
     from urls order by last_visit_time desc" |
  awk -F $sep '{printf "%-'$cols's  \x1b[36m%s\x1b[m\n", $1, $2}' |
  fzf --ansi --multi | sed 's#.*\(https*://\)#\1#' | xargs $open > /dev/null 2> /dev/null
}
