#
#                          ⢸⣦⡈⠻⣿⣿⣿⣶⣄
#                          ⢸⣿⣿⣦⡈⠻⣿⣿⣿⣷⣄
#                    ⣀⣀⣀⣀⣀⣀⣼⣿⣿⣿⣿ ⠈⠻⣿⣿⣿⣷⣄
#                    ⠈⠻⣿⣿⣿⣿⣿⡿⠿⠛⠁   ⠈⠻⢿⣿⣿⣷⣄
#
# Personal zsh configuration of Ari Miller <arimiller.official@gmail.com>

#--------------------------------------------------------------------------
# Setup
#--------------------------------------------------------------------------

if [ -f $HOME/.env ]; then
    set -o allexport; source $HOME/.env; set +o allexport
fi

typeset -U path
path=(
    $HOME/.local/bin
    $HOME/.config/emacs/bin
    /opt/homebrew/bin
    ./vendor/bin
    $path
)

export EDITOR=nvim
export GIT_EDITOR=nvim
# export FZF_DEFAULT_COMMAND=''
export DOTFILES="$HOME/Code/tam5/dotfiles"

#--------------------------------------------------------------------------
# Plugins
#--------------------------------------------------------------------------

if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

eval "$(mise activate zsh)"

[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

source $(brew --prefix)/share/antigen/antigen.zsh

antigen use oh-my-zsh

antigen theme romkatv/powerlevel10k

antigen bundle command-not-found
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle jeffreytse/zsh-vi-mode

antigen apply

#HYPHEN_INSENSITIVE="true"
#COMPLETION_WAITING_DOTS="true"
#HIST_STAMPS="yyyy-mm-dd"
#VI_MODE_SET_CURSOR=true
#VI_MODE_RESET_PROMPT_ON_MODE_CHANGE=true

#plugins=()

#--------------------------------------------------------------------------
# Aliases
#--------------------------------------------------------------------------

alias vim="nvim"

alias ls="eza --long --all --group-directories-first --time-style long-iso"

alias rm="echo Stop! Use rip instead!"

alias ga="git add"
alias gc="git commit"
alias gcn="git commit --no-verify"
alias gd="git diff"
alias gs="git status"
alias gp="git push"
alias gco="git checkout"
alias gsu="git branch --set-upstream-to=origin/\$(git rev-parse --abbrev-ref HEAD)"
alias gpu="git push -u origin \$(git rev-parse --abbrev-ref HEAD)"
alias gstash="git add . && git commit -m 'stash'"
alias gpop="git reset --soft head~1 && git reset head"
alias gco="git checkout"
alias nah="git reset --hard head && git clean -fd"
alias wip='git add . && git commit -m "wip" --no-verify'

unalias gd
gd() {
  if [[ ! -z $@ ]]; then git diff "$@"; return; fi

  preview="git diff $@ --color=always -- {-1}"
  git diff $@ --name-only | fzf -m --ansi --preview $preview \
      --bind "enter:execute:git diff --color=always {} | less -R" \
}

unalias gco 2> /dev/null
gco() {
  if [[ ! -z $@ ]]; then git checkout "$@"; return; fi

  local branches branch
  branches=$(git for-each-ref --count=50 --sort=-committerdate --format="%(refname:short)") &&
  branch=$(echo "$branches" |
           fzf-tmux -d $(( 2 + $(wc -l <<< "$branches") )) +m) &&
  git checkout $(echo $branch | rg -o "([^/]+/)?[^/]+$")
}

_gitLogLineToHash="echo {} | grep -o '[a-f0-9]\{7\}' | head -1"
_viewGitLogLine="$_gitLogLineToHash | xargs -I % sh -c 'git show --color=always % | delta'"

unalias glo 2> /dev/null
glo() {
    git log --graph --color=always --format="%Cred%h%Creset - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(black)%d%Creset" |
        fzf --no-sort --no-mouse --reverse --tiebreak=index --no-multi \
            --ansi --preview="$_viewGitLogLine" \
                --header "enter to view, ctrl-y to copy hash" \
                --bind "enter:execute:$_viewGitLogLine   | less -R" \
                --bind "ctrl-y:execute:$_gitLogLineToHash | pbcopy"
}

alias gro="glo ..@{u}"



alias dotfiles="cd $DOTFILES"
alias desk="cd ~/Desktop"
alias code="cd ~/Code"
alias repos="cd ~/Code/armiller/gh-repo-search/repos"

alias p="poetry run python"

nr() {
  local cmd

  cmd=$(cat package.json | jq -r '.scripts | keys[]' | fzf) &&
      npm run $cmd
}

# pnpm
export PNPM_HOME="/Users/armiller/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

eval "$(atuin init zsh --disable-up-arrow)"


# This speeds up pasting w/ autosuggest
# https://github.com/zsh-users/zsh-autosuggestions/issues/238
pasteinit() {
  OLD_SELF_INSERT=${${(s.:.)widgets[self-insert]}[2,3]}
  zle -N self-insert url-quote-magic # I wonder if you'd need `.url-quote-magic`?
}

pastefinish() {
  zle -N self-insert $OLD_SELF_INSERT
}
zstyle :bracketed-paste-magic paste-init pasteinit
zstyle :bracketed-paste-magic paste-finish pastefinish

# Your custom widget
# function my_custom_widget() {
#   echo 'Hello, ZSH!'
# }
#
# # The plugin will auto execute this zvm_after_lazy_keybindings function
# function zvm_after_lazy_keybindings() {
#   # Here we define the custom widget
#   zvm_define_widget my_custom_widget
#
#   # In normal mode, press Ctrl-E to invoke this widget
#   zvm_bindkey vicmd ' fr' my_custom_widget
#   zvm_bindkey vicmd '^p' my_custom_widget
# }






# TODO
- jumper
- contextually aware ga and vim
- logo
- colors


j() {
    # fd --hidden --type directory '\.git$' --exec dirname | fzf
}
